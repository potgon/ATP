version: '3.8'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - ${ZOOKEEPER_PORT}:${ZOOKEEPER_PORT}

  kafka:
    image: wurstmeister/kafka
    ports:
      - ${KAFKA_PORT}:${KAFKA_PORT}
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://${KAFKA_ADVERTISED_LISTENERS_INSIDE},OUTSIDE://${KAFKA_ADVERTISED_LISTENERS_OUTSIDE}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP_INSIDE},OUTSIDE:${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP_OUTSIDE}
      KAFKA_LISTENERS: INSIDE://${KAFKA_LISTENERS_INSIDE},OUTSIDE://${KAFKA_LISTENERS_OUTSIDE}
      KAFKA_INTER_BROKER_LISTENER_NAME: ${KAFKA_INTER_BROKER_LISTENER_NAME}
      KAFKA_ZOOKEEPER_CONNECT: ${KAFKA_ZOOKEEPER_CONNECT}
    volumes:
      - ./kafka-data:/var/lib/kafka/data
    depends_on:
      - zookeeper

  web:
    build: .
    volumes:
      - .:/app
      - ./logs/:/app/logs/
    ports:
      - "8000:8000"
    env_file:
      - .env

  # model-trainer:
  #   build: .
  #   volumes:
  #     - .:/app
  #     - ./logs/:/app/logs/
  #   env_file:
  #     - .env
  #   command: ["poetry", "run", "python", "src/app/evaluation_core/scripts/train_model.py"]
  #   environment:
  #     - PYTHONPATH=/app/src